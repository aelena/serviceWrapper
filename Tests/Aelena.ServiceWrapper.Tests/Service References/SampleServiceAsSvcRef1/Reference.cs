//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aelena.ServiceWrapper.Tests.SampleServiceAsSvcRef1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="aelena.com/services/sampleservice", ConfigurationName="SampleServiceAsSvcRef1.ISampleService")]
    public interface ISampleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="aelena.com/services/sampleservice/ISampleService/UpdateStatus", ReplyAction="aelena.com/services/sampleservice/ISampleService/UpdateStatusResponse")]
        string UpdateStatus(string myID, int myStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="aelena.com/services/sampleservice/ISampleService/UpdateStatus", ReplyAction="aelena.com/services/sampleservice/ISampleService/UpdateStatusResponse")]
        System.Threading.Tasks.Task<string> UpdateStatusAsync(string myID, int myStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="aelena.com/services/sampleservice/ISampleService/GetClient", ReplyAction="aelena.com/services/sampleservice/ISampleService/GetClientResponse")]
        AElena.ServiceWrapper.SampleService.Client GetClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="aelena.com/services/sampleservice/ISampleService/GetClient", ReplyAction="aelena.com/services/sampleservice/ISampleService/GetClientResponse")]
        System.Threading.Tasks.Task<AElena.ServiceWrapper.SampleService.Client> GetClientAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISampleServiceChannel : Aelena.ServiceWrapper.Tests.SampleServiceAsSvcRef1.ISampleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SampleServiceClient : System.ServiceModel.ClientBase<Aelena.ServiceWrapper.Tests.SampleServiceAsSvcRef1.ISampleService>, Aelena.ServiceWrapper.Tests.SampleServiceAsSvcRef1.ISampleService {
        
        public SampleServiceClient() {
        }
        
        public SampleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SampleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string UpdateStatus(string myID, int myStatus) {
            return base.Channel.UpdateStatus(myID, myStatus);
        }
        
        public System.Threading.Tasks.Task<string> UpdateStatusAsync(string myID, int myStatus) {
            return base.Channel.UpdateStatusAsync(myID, myStatus);
        }
        
        public AElena.ServiceWrapper.SampleService.Client GetClient(int id) {
            return base.Channel.GetClient(id);
        }
        
        public System.Threading.Tasks.Task<AElena.ServiceWrapper.SampleService.Client> GetClientAsync(int id) {
            return base.Channel.GetClientAsync(id);
        }
    }
}
